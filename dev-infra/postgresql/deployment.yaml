# https://kubernetes.io/docs/concepts/workloads/controllers/deployment/
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgresql
  namespace: food2gether
  labels:
    app: postgresql
spec:
  selector:
    matchLabels:
      app: postgresql
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container:  postgresql
      labels:
        app: postgresql
    spec:
      containers:
      - name: postgresql
        image: postgres:17.4-alpine
        imagePullPolicy: IfNotPresent
        lifecycle:
          postStart:
            exec:
              command:
              - psql
              args:
              - -U $POSTGRES_USER
              - -d $POSTGRES_DB
              - -c "INSERT INTO profiles (displayname, name, primaryemail, profilePictureUrl) VALUES ('Robin Ahin', 'flobbin', 'robbin@example.com', 'https://robin-ahn.de/assets/avatar.svg');"
              - -c "INSERT INTO profiles (displayname, name, primaryemail) VALUES ('Jo Gengnagel', 'jogen', 'jo.gengnagel@exmaple.com');"
              - -c "INSERT INTO profiles (displayname, name, primaryemail) VALUES ('Kaan Güven', 'kanngvn_', 'ich.kaan.das.nicht.mehr@exmaple.com');"
              - -c "INSERT INTO profiles (displayname, name, primaryemail) VALUES ('Nikolas Iliadi', 'vonnovo', 'vonnovo@exmaple.com');"
              - -c "INSERT INTO profiles (displayname, name, primaryemail) VALUES ('Marvin Haase', 'marfien', 'contact@marfien.dev');"
              - -c "INSERT INTO restaurants (address_city, address_county, address_postal_code, address_street, displayname) VALUES ('Aachen', 'Germany', '52062', 'Pontstraße 151', 'Habibna');"
              - -c "INSERT INTO menu_items (price, restaurant_id, description, name) VALUES (500, 1, 'Gegrilltes Hähnchenfleich eingelegt in einer libanesischen Marinade, Fritten, Salat, Beirut Sauce', '40. Schawarma Djej');"
              - -c "INSERT INTO menu_items (price, restaurant_id, description, name) VALUES (450, 1, 'Gebratenes Gemüse, Salat, Hummus, Käse, Beirut Sauce', '51. Maali');"
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
          limits:
            cpu: 100m
            memory: 100Mi
        livenessProbe:
          tcpSocket:
            port: 5432
          initialDelaySeconds: 5
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
          periodSeconds: 10
        readinessProbe:
          exec:
            command: [ "pg_isready", "-d", "$POSTGRES_DB", "-U", "$POSTGRES_USER" ]
          initialDelaySeconds: 5
          timeoutSeconds: 2
          successThreshold: 1
          failureThreshold: 3
          periodSeconds: 10
        env:
        - name: POSTGRES_PASSWORD
          value: password
        - name: POSTGRES_USER
          value: username
        - name: POSTGRES_DB
          value: food2gether
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata
        ports:
        - containerPort: 80
          name: postgresql
        volumeMounts:
        - name: pgdata
          mountPath: /var/lib/postgresql/data/pgdata
      volumes:
        - name: pgdata
          hostPath:
            path: /var/mnt/postgresql/data
      restartPolicy: Always
---